@inject IJSRuntime jsRuntime

<label>
    <input type="checkbox" @bind="DisplayEmail"/>
    <span>Display Email</span>
</label>

<br />

@if(DisplayContacts)
{
    @if (Contacts is null)
    {
        @NullFragment
    }
    else if (Contacts.Count == 0)
    {
        @EmptyContacts
    }
    else
    {
        @foreach (var contact in Contacts)
        {
            <ContactComponent01 CurrentContact="contact" DisplayEmail="@DisplayEmail" DeleteCurrentContact="DeleteContact"></ContactComponent01>
        }
    }
}


@code
{
    [Parameter]
    public RenderFragment NullFragment { get; set; }
    [Parameter]
    public RenderFragment EmptyContacts { get; set; }
    [Parameter]
    public List<Contact> Contacts{ get; set; }

    private bool DisplayEmail = true;
    private bool DisplayContacts = true;

    private async Task DeleteContact(Contact contact)
    {
        bool result = await jsRuntime.InvokeAsync<bool>("confirm", "Do you want to delete this contact?");

        if (result != true) return;
        Contacts.Remove(contact);
    }

    public void ShowContacts() => DisplayContacts = true;
    public void HideContacts() => DisplayContacts = false;
}